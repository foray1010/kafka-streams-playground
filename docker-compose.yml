version: "3.8"
services:
  server:
    image: elleflorio/kafka-streams-playground
    expose:
      - 8000
    ports:
      - 8000:8000
    depends_on:
      - mongo1
      - mongo2
      - mongo3
      - kafka
    networks:
      - kakfa_stream_playground
    environment:
      SERVER_IP: 0.0.0.0
      MONGO_URI: mongo1:27017
      KAFKA_HOSTS: kafka:9092

  mongo1:
    image: mongo:4.0
    ports:
      - 27017:27017
    expose:
      - 27017
    networks:
      - kakfa_stream_playground
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "r0" ]

  mongo2:
    image: mongo:4.0
    expose:
      - 27017
    networks:
      - kakfa_stream_playground
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "r0" ]

  mongo3:
    image: mongo:4.0
    expose:
      - 27017
    networks:
      - kakfa_stream_playground
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "r0" ]

  zookeeper:
    image: zookeeper:3.6
    ports:
      - 2181:2181
    networks:
      - kakfa_stream_playground

  kafka:
    image: wurstmeister/kafka:2.13-2.6.0
    ports:
      - 9092:9092
    networks:
      - kakfa_stream_playground
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  kafdrop:
    image: obsidiandynamics/kafdrop
    ports:
      - 9000:9000
    networks:
      - kakfa_stream_playground
    depends_on:
      - kafka
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
      JVM_OPTS: -Xms32M -Xmx64M
      SERVER_SERVLET_CONTEXTPATH: /
    logging:
      driver: none

  connect:
    image: confluentinc/cp-kafka-connect:5.5.1
    ports:
      - 8083:8083
    networks:
      - kakfa_stream_playground
    depends_on:
      - zookeeper
      - kafka
    volumes:
      - $PWD/connect-plugins:/connect-plugins
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka:9092
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_ZOOKEEPER_CONNECT: zookeeper:2181
      CONNECT_PLUGIN_PATH: /connect-plugins
      CONNECT_LOG4J_ROOT_LOGLEVEL: INFO

  elasticsearch:
    image: elasticsearch:7.9.0
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - kakfa_stream_playground
    environment:
      discovery.type: single-node

  kibana:
    image: kibana:7.9.0
    ports:
      - 5601:5601
    networks:
      - kakfa_stream_playground
    depends_on:
      - elasticsearch
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    logging:
      driver: none

networks:
  kakfa_stream_playground:
